name: Build and Vet

on:
  pull_request:
    branches:
      - main

jobs:

  # --- Image Names ---

  image-names:
    name: PR (Branch) Image Names
    uses: brianjbayer/actions-image-cicd/.github/workflows/image_names.yml@v0.2.2
    with:
      add_branch_name: true

  # --- Build and Push Images ---

  buildx-and-push-dev-image:
    name: Build Development Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_push_image.yml@v0.2.2
    with:
      image: ${{ needs.image-names.outputs.dev_image }}
      platforms: "linux/amd64,linux/arm64"
      buildopts: --target devenv
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  buildx-and-push-unvetted-image:
    name: Build Deployment (Unvetted) Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_push_image.yml@v0.2.2
    with:
      image: ${{ needs.image-names.outputs.unvetted_image }}
      platforms: "linux/amd64,linux/arm64"
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # --- Vet Images ---

  vet-lint-security:
    name: Vet Code Quality
    needs:
      - image-names
      - buildx-and-push-dev-image
    uses: brianjbayer/actions-image-cicd/.github/workflows/vet_code_standards.yml@v0.2.2
    with:
      lint_command: "E2ETESTS_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -d ./script/run lint"
      dependency_security_command: "E2ETESTS_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -d ./script/run secscan"

  vet-deploy-e2e-tests:
    name: Run E2E Tests against Mock
    needs:
      - image-names
      - buildx-and-push-unvetted-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: dockercomposerun unvetted image with mock target
        run: "E2ETESTS_IMAGE=${{ needs.image-names.outputs.unvetted_image }} ./script/dockercomposerun -cm"

  vet-dev-e2e-tests:
    name: Run Devenv E2E Tests against Mock
    needs:
      - image-names
      - buildx-and-push-dev-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: dockercomposerun unvetted image with mock target
        run: "E2ETESTS_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -cm"

  # --- Promote Vetted Image If It Passes ---

  copy-branch-vetted-deploy-image:
    name: Promote Vetted Deployment Image
    needs:
      - image-names
      - vet-lint-security
      - vet-deploy-e2e-tests
    uses: brianjbayer/actions-image-cicd/.github/workflows/copy_image.yml@main
    with:
      source_image: ${{ needs.image-names.outputs.unvetted_image }}
      target_image: ${{ needs.image-names.outputs.vetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
